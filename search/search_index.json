{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"These pages document all of the features, setup instructions and configuration guides for the Captain Discord bot .","title":"Welcome"},{"location":"changelog/","text":"Below, you'll be able to read the latest patch notes and see what changes have been made! Release v3.2.0 Release v3.1.1 Release v3.1.0 Release v3.0.0","title":"All Releases"},{"location":"changelog/v3.0.0/","text":"This was a major release that focused on rewriting the entire bot and improving the existing features. Features \u00b6 Added the ability to specify a message that will be DMed to a user whenever a certain action occurs (ban, mute etc.) Added statistic counters to show a server's statistics in voice channel names Added starboard functionality Added persistent roles to retain certain roles when a user re-joins the server Added reaction roles to let users choose from a handful of vanity roles Added lockdown functionality Improvements \u00b6 Message archives are now in the form of .html files, this removes the room for API failure and also avoids complications with the Discord ToS All of the code has been cleaned up on the backend to improve overall performance and make development easier Switched an easier-to-use emoji system that only requires a unicode emoji or a custom emoji string Renamed the bot to Captain rather than Artemis Removals \u00b6 Softbans have been removed and may return in the future Dropped the Archive API since it fails to properly comply with Discord ToS Informational commands have been dropped since they didn't fit in well with the bot, may return in the future The eval command was ditched since it was quite a bit of work to maintain and doesn't fit in with the bot Ditched the invite generator since it's more of a utility command Bugfixes \u00b6 There were a variety of bugfixes with this release","title":"Release v3.0.0"},{"location":"changelog/v3.0.0/#features","text":"Added the ability to specify a message that will be DMed to a user whenever a certain action occurs (ban, mute etc.) Added statistic counters to show a server's statistics in voice channel names Added starboard functionality Added persistent roles to retain certain roles when a user re-joins the server Added reaction roles to let users choose from a handful of vanity roles Added lockdown functionality","title":"Features"},{"location":"changelog/v3.0.0/#improvements","text":"Message archives are now in the form of .html files, this removes the room for API failure and also avoids complications with the Discord ToS All of the code has been cleaned up on the backend to improve overall performance and make development easier Switched an easier-to-use emoji system that only requires a unicode emoji or a custom emoji string Renamed the bot to Captain rather than Artemis","title":"Improvements"},{"location":"changelog/v3.0.0/#removals","text":"Softbans have been removed and may return in the future Dropped the Archive API since it fails to properly comply with Discord ToS Informational commands have been dropped since they didn't fit in well with the bot, may return in the future The eval command was ditched since it was quite a bit of work to maintain and doesn't fit in with the bot Ditched the invite generator since it's more of a utility command","title":"Removals"},{"location":"changelog/v3.0.0/#bugfixes","text":"There were a variety of bugfixes with this release","title":"Bugfixes"},{"location":"changelog/v3.1.0/","text":"This was a minor release that focused on adding a handful of new features and making general improvements, including some bug fixes. Features \u00b6 Reminder commands The trusted command level (10) Improvements \u00b6 Rewrote the documentation website bean and moot commands now only require level 10 to use Merged actions.yml and emojis.yml into config.yml to reduce clutter Moved core/constants.py to core/constants.example.py to prevent conflicts when pulling the newest commits Bugfixes \u00b6 Fixed some pretty serious bugs with the timer framework Fixed an issue where the default command level had absolutely no affect","title":"Release v3.1.0"},{"location":"changelog/v3.1.0/#features","text":"Reminder commands The trusted command level (10)","title":"Features"},{"location":"changelog/v3.1.0/#improvements","text":"Rewrote the documentation website bean and moot commands now only require level 10 to use Merged actions.yml and emojis.yml into config.yml to reduce clutter Moved core/constants.py to core/constants.example.py to prevent conflicts when pulling the newest commits","title":"Improvements"},{"location":"changelog/v3.1.0/#bugfixes","text":"Fixed some pretty serious bugs with the timer framework Fixed an issue where the default command level had absolutely no affect","title":"Bugfixes"},{"location":"changelog/v3.1.1/","text":"This was a patch release that addressed a series of bugs and introduced a way to reload configuration files during runtime. Features \u00b6 A command ( reload guilds ) to reload the guilds.yml file Improvements \u00b6 Changed docker run command to bind-mount config files into the container Bugfixes \u00b6 Fixed a problem with access control overwrites not working","title":"Release v3.1.1"},{"location":"changelog/v3.1.1/#features","text":"A command ( reload guilds ) to reload the guilds.yml file","title":"Features"},{"location":"changelog/v3.1.1/#improvements","text":"Changed docker run command to bind-mount config files into the container","title":"Improvements"},{"location":"changelog/v3.1.1/#bugfixes","text":"Fixed a problem with access control overwrites not working","title":"Bugfixes"},{"location":"changelog/v3.2.0/","text":"This was a minor release that focused on the addition of a handful of new features as well as some bug fixes and general improvements. Features \u00b6 Mod commands to set/change and remove a user's nickname Custom commands with the ability to specify whether to send a message or toggle a role An option to specify the bot's nickname in the guild's config Anti-link to prevent users from sending links in chat Roles for Badges to give roles to users depending on what profile badges they have Owner-only control shutdown command to gracefully shut down. A bot filter that allows you to block bots that aren't a certain age or don't have the verified checkmark A Gatekeeper system to require certain users (or all users) to verify themselves before gaining access to the rest of the server Improvements \u00b6 Renamed reload guilds to control reload guilds Owner-only commands will now be shown in the help command Bugfixes \u00b6 Fixed a bug with timed/temporary commands where the duration could be 0 seconds Fixed a pretty silly bug that prevented auto-role synchronisation from working Fixed a bug that prevented the check that required the send_messages permission from working","title":"Release v3.2.0"},{"location":"changelog/v3.2.0/#features","text":"Mod commands to set/change and remove a user's nickname Custom commands with the ability to specify whether to send a message or toggle a role An option to specify the bot's nickname in the guild's config Anti-link to prevent users from sending links in chat Roles for Badges to give roles to users depending on what profile badges they have Owner-only control shutdown command to gracefully shut down. A bot filter that allows you to block bots that aren't a certain age or don't have the verified checkmark A Gatekeeper system to require certain users (or all users) to verify themselves before gaining access to the rest of the server","title":"Features"},{"location":"changelog/v3.2.0/#improvements","text":"Renamed reload guilds to control reload guilds Owner-only commands will now be shown in the help command","title":"Improvements"},{"location":"changelog/v3.2.0/#bugfixes","text":"Fixed a bug with timed/temporary commands where the duration could be 0 seconds Fixed a pretty silly bug that prevented auto-role synchronisation from working Fixed a bug that prevented the check that required the send_messages permission from working","title":"Bugfixes"},{"location":"config/","text":"In this guide, I'll run through all of Captain's configuration options and how to use them. 1 Danger Captain's configuration uses something called yaml, if you do not know how to use this do not attempt to configure Captain, you will probably break it . If you need help, feel free to ask in the official Discord server ! Certain sub-settings aren't shown because they're self-explanatory. \u21a9","title":"Introduction"},{"location":"config/access-control/","text":"In short, the access_control section allows server admins to configure which roles are allowed to use what commands. Example access_control : 123456789098765432 : # role ID level : 100 # 100 = admin (all commands) 123456789098765432 : # role ID level : 90 # 90 = mod (all commands except lockdown) 123456789098765432 : # role ID level : 90 # the same level can exist more than once overwrites : # by denying access to certain commands, this effectively becomes a \"trial mod\" role unban : false # each overwrite is in the format [command name: true/false] ban : false 123456789098765432 : # role ID level : 10 # 10 = trusted (all non-mod commands + some easter eggs) everyone : # everyone = every single member. This could also be a role ID for members, if you want level : 0 # 0 = default (non-mod commands) Levels and what they mean \u00b6 A level is sort of like a preset of commands that a role should use. For example, users with the mod level should be able to use Moderation commands, but not Administration commands (such as lockdown and infraction clearing). Below, you'll find a table showing which level ID matches a particular role. Role Level Administrator 100 Moderator 90 Trusted 10 Default 0 Creating your own levels \u00b6 Currently, there's no way to create your own level designation (e.g. 80 for trial mod), but it is planned. However, you can achieve the same effect by using an existing level as a base then adding overwrites. For example, here's what a trial mod level would look like (trial mods may have different access to commands for your server but the idea is the same). access_control : 123456789098765432 : # role ID level : 90 # we'll use moderator as a base here overwrites : ban : false unban : false inf search : false inf recent : false Breaking it down \u00b6 Alright so this look a little scary at first, but I promise it isn't! To summarise, the example above essentially means: trial mods can use all mod commands apart from ban, unban, inf search and inf recent . If you're still struggling, the good guys and gals in the official Discord server can give you a hand! Hierarchy \u00b6 The hierarchy for overlapping levels can be incredibly confusing, but I'll try to summarise it anyway. In short, the user's access to commands is first affected by their highest level. If their highest level doesn't affect a certain command, it will be affected by their second highest level (and this repeats). If the user has the same level twice that both overwrite the command (assuming the overwrites are different), then the order of the levels in the configuration file determines which takes priority. Summary TLDR; if you have a complex system of overlapping levels, it is best to just remove any unnecessary roles from the user that could cause conflicts.","title":"Access Control"},{"location":"config/access-control/#levels-and-what-they-mean","text":"A level is sort of like a preset of commands that a role should use. For example, users with the mod level should be able to use Moderation commands, but not Administration commands (such as lockdown and infraction clearing). Below, you'll find a table showing which level ID matches a particular role. Role Level Administrator 100 Moderator 90 Trusted 10 Default 0","title":"Levels and what they mean"},{"location":"config/access-control/#creating-your-own-levels","text":"Currently, there's no way to create your own level designation (e.g. 80 for trial mod), but it is planned. However, you can achieve the same effect by using an existing level as a base then adding overwrites. For example, here's what a trial mod level would look like (trial mods may have different access to commands for your server but the idea is the same). access_control : 123456789098765432 : # role ID level : 90 # we'll use moderator as a base here overwrites : ban : false unban : false inf search : false inf recent : false","title":"Creating your own levels"},{"location":"config/access-control/#breaking-it-down","text":"Alright so this look a little scary at first, but I promise it isn't! To summarise, the example above essentially means: trial mods can use all mod commands apart from ban, unban, inf search and inf recent . If you're still struggling, the good guys and gals in the official Discord server can give you a hand!","title":"Breaking it down"},{"location":"config/access-control/#hierarchy","text":"The hierarchy for overlapping levels can be incredibly confusing, but I'll try to summarise it anyway. In short, the user's access to commands is first affected by their highest level. If their highest level doesn't affect a certain command, it will be affected by their second highest level (and this repeats). If the user has the same level twice that both overwrite the command (assuming the overwrites are different), then the order of the levels in the configuration file determines which takes priority. Summary TLDR; if you have a complex system of overlapping levels, it is best to just remove any unnecessary roles from the user that could cause conflicts.","title":"Hierarchy"},{"location":"config/auto-mod/","text":"This page compiles 4 different configuration options into 1 since they're all very similar. Anti spam \u00b6 This is simple. If a user sends X messages within Y seconds, do Z action. Example anti_spam : enabled : true action : 2 duration : 3600 count : 5 threshold : 5 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID Anti ping-spam \u00b6 This is similar to anti-spam but it only counts the number of people a user has mentioned recently. Example anti_ping_spam : enabled : true action : 2 duration : 3600 count : 10 threshold : 60 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID Anti curse \u00b6 This blocks a list of words. Often times, these words will be curses and derogatory terms. Example anti_curse : enabled : true action : 2 duration : 3600 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID blacklist : - nigga - faggot Anti invite \u00b6 Does what it says on the tin; stops users from sending invite links to other Discord servers. Example anti_invite : enabled : true action : 2 duration : 3600 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID whitelist : - discord-developers - discord-testers - discord-events Note Invites for the server will be ignored by Captain. Action \u00b6 This is a numerical value ranging from 1-4 that determines which action should be taken when a user triggers auto-mod. Refer to the table below to see which number matches which action. Action Key Ban 1 Mute 2 Warn 3 Nothing 4 Note No matter what the provided action number is, the message(s) that triggered auto-mod will be deleted. Duration \u00b6 If the action is set to 1/2 (ban/mute), the duration tells Captain how long the punishment should last. I.e. if the action is ban and the duration is 3600, any users that trigger auto-mod will be banned for an hour. Count \u00b6 This option is specific to anti spam and anti ping spam. This is the number of occurances that Captain will tolerate before invoking an action on the user. For example, setting this to 5 for anti spam means that a user needs to send 5 messages within the configured time period to trigger anti spam. Threshold \u00b6 This option is specific to anti spam and anti ping spam. This is the time period that a user has to trigger anti spam or anti ping spam. Usually, this should be pretty short for anti spam and pretty long for anti ping spam. Still don't understand? OK then. If the count and threshold for anti spam are both 5, that means a user has to send 5 messages within 5 seconds to trigger anti spam. Ignored roles & Ignored channels \u00b6 Hopefully self-explanatory. If a user has ANY of the ignored roles, they are exempt from that specific auto-mod feature. If the message was sent in one of the ignored channels, auto-mod ignores it. You get the drift? Good. Blacklist \u00b6 This option is specific to anti curse. This should be a list of words that are blocked by Captain. This will likely be populated by a list of derogatory terms and perhaps curse words (if you choose to block them in your server). Whitelist \u00b6 This option is specific to anti invite. This is a list of Discord invites that Captain will not filter. Usually, invites to official Discord servers, affiliated servers and other verified servers belong here. You wouldn't want to block the Fortnite official server invite now would you?","title":"Auto Mod"},{"location":"config/auto-mod/#anti-spam","text":"This is simple. If a user sends X messages within Y seconds, do Z action. Example anti_spam : enabled : true action : 2 duration : 3600 count : 5 threshold : 5 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID","title":"Anti spam"},{"location":"config/auto-mod/#anti-ping-spam","text":"This is similar to anti-spam but it only counts the number of people a user has mentioned recently. Example anti_ping_spam : enabled : true action : 2 duration : 3600 count : 10 threshold : 60 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID","title":"Anti ping-spam"},{"location":"config/auto-mod/#anti-curse","text":"This blocks a list of words. Often times, these words will be curses and derogatory terms. Example anti_curse : enabled : true action : 2 duration : 3600 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID blacklist : - nigga - faggot","title":"Anti curse"},{"location":"config/auto-mod/#anti-invite","text":"Does what it says on the tin; stops users from sending invite links to other Discord servers. Example anti_invite : enabled : true action : 2 duration : 3600 ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID whitelist : - discord-developers - discord-testers - discord-events Note Invites for the server will be ignored by Captain.","title":"Anti invite"},{"location":"config/auto-mod/#action","text":"This is a numerical value ranging from 1-4 that determines which action should be taken when a user triggers auto-mod. Refer to the table below to see which number matches which action. Action Key Ban 1 Mute 2 Warn 3 Nothing 4 Note No matter what the provided action number is, the message(s) that triggered auto-mod will be deleted.","title":"Action"},{"location":"config/auto-mod/#duration","text":"If the action is set to 1/2 (ban/mute), the duration tells Captain how long the punishment should last. I.e. if the action is ban and the duration is 3600, any users that trigger auto-mod will be banned for an hour.","title":"Duration"},{"location":"config/auto-mod/#count","text":"This option is specific to anti spam and anti ping spam. This is the number of occurances that Captain will tolerate before invoking an action on the user. For example, setting this to 5 for anti spam means that a user needs to send 5 messages within the configured time period to trigger anti spam.","title":"Count"},{"location":"config/auto-mod/#threshold","text":"This option is specific to anti spam and anti ping spam. This is the time period that a user has to trigger anti spam or anti ping spam. Usually, this should be pretty short for anti spam and pretty long for anti ping spam. Still don't understand? OK then. If the count and threshold for anti spam are both 5, that means a user has to send 5 messages within 5 seconds to trigger anti spam.","title":"Threshold"},{"location":"config/auto-mod/#ignored-roles-ignored-channels","text":"Hopefully self-explanatory. If a user has ANY of the ignored roles, they are exempt from that specific auto-mod feature. If the message was sent in one of the ignored channels, auto-mod ignores it. You get the drift? Good.","title":"Ignored roles &amp; Ignored channels"},{"location":"config/auto-mod/#blacklist","text":"This option is specific to anti curse. This should be a list of words that are blocked by Captain. This will likely be populated by a list of derogatory terms and perhaps curse words (if you choose to block them in your server).","title":"Blacklist"},{"location":"config/auto-mod/#whitelist","text":"This option is specific to anti invite. This is a list of Discord invites that Captain will not filter. Usually, invites to official Discord servers, affiliated servers and other verified servers belong here. You wouldn't want to block the Fortnite official server invite now would you?","title":"Whitelist"},{"location":"config/auto-roles/","text":"By configuring auto_roles , you can tell Captain to assign specific roles to new users. You can even decide to give a role to any new bots that join, but not regular users (and vice versa). Example auto_roles : 123456789098765432 : # role ID - HUMAN 123456789098765432 : # role ID - BOT User Type Key Regular user HUMAN Bot account BOT","title":"Auto Roles"},{"location":"config/bot-filter/","text":"Need to write this.","title":"Bot Filter"},{"location":"config/custom-commands/","text":"The custom_commands option allows guild owners to specify a list of commands with their own names. You can use this to send a message, or toggle a role on a user. The second option is useful because it essentially acts like an alternative to reaction roles (we call this self-assign roles). Example custom_commands : - name : lorem action : 0 value : \"{ctx.author.mention} Lorem ipsum dolor sit amet\" - name : ipsum action : 1 value : 123456789098765432 # role ID Name \u00b6 This is the actual name of the command that you want to create. To actually call the command, you'd send a message with the bot's prefix followed directly by the command name. For example, if the prefix is ! and the name is hello , the command would be !hello . Note Due to some limitations, custom commands does not yet support mentioning the bot as a prefix. Action \u00b6 This allows you to specify what will happen when someone uses the custom command. Refer to the table below for details. Action Key Send message 0 Toggle role 1 Value \u00b6 Depending on the action chosen, this will either be some text (for the send message action) or a role ID (for the toggle role action). Note The value of a custom command with the send message action has formatting access to context via ctx . E.g. to mention the user that used the command, just add {ctx.author.mention} to the value! See the discord.py documentation for details.","title":"Custom Commands"},{"location":"config/custom-commands/#name","text":"This is the actual name of the command that you want to create. To actually call the command, you'd send a message with the bot's prefix followed directly by the command name. For example, if the prefix is ! and the name is hello , the command would be !hello . Note Due to some limitations, custom commands does not yet support mentioning the bot as a prefix.","title":"Name"},{"location":"config/custom-commands/#action","text":"This allows you to specify what will happen when someone uses the custom command. Refer to the table below for details. Action Key Send message 0 Toggle role 1","title":"Action"},{"location":"config/custom-commands/#value","text":"Depending on the action chosen, this will either be some text (for the send message action) or a role ID (for the toggle role action). Note The value of a custom command with the send message action has formatting access to context via ctx . E.g. to mention the user that used the command, just add {ctx.author.mention} to the value! See the discord.py documentation for details.","title":"Value"},{"location":"config/gatekeeper/","text":"gatekeeper is a system that requires certain (or all) users to verify their legitimacy with a series of special methods. Example gatekeeper : enabled : true min_age : 604800 checks_for_bypass : 2 # null will disable auto-bypassing type : 1 action : 1 role : 123456789098765432 # role ID extras : char_length : 6 noise : 0.6 attempts : 3 Min age \u00b6 This is the number of seconds old an account has to be to avoid failing the age check. The default is 7 days. Checks for bypass \u00b6 This setting determines how many checks a user has to pass before they can be auutomatically verified by Captain. If they don't hit this number of checks, they will be required to verify themselves before gaining entry. You can set this option to null to require all users to verify themselves. This is recommended for large or high-risk servers. Type \u00b6 This integer represents the kind of verification that users will need to complete to gain access. See the table below for reference. Verification method Key Run a command 0 Complete a captcha 1 Action \u00b6 This determines what will happen when a user is verified. There's a table below for your convenience. If your server is large or high-risk, it is safer to add a role because it avoids complications during downtime of the bot. Action Key Add a role 0 Remove a role 1 Role \u00b6 This is the ID of the role that will either be added or removed when a user verifies themselves. Extras \u00b6 This should be a dictionary of extra data that is used by a specific type of verification method. At the moment, this only applies to captcha verification (1). See the tables below for help. Captcha Verification \u00b6 Key Explanation char_length The number of characters in a captcha. noise How much image \"noise\" there should be in a captcha. attempts How many attempts a user is given per captcha. What checks are ran? \u00b6 Currently, there are 2 checks ran on each new user. Avatar check \u00b6 Raiders and automated bot accounts tend to have no avatar. As such, Captain checks whether or not a user has an avatar when it joins and uses that in it's summary of a user's threat level. Age check \u00b6 Almost always, malicious accounts are new and created en masse. As such, a user must be x seconds old to pass this check (though almost all legitimate accounts will pass).","title":"Gatekeeper"},{"location":"config/gatekeeper/#min-age","text":"This is the number of seconds old an account has to be to avoid failing the age check. The default is 7 days.","title":"Min age"},{"location":"config/gatekeeper/#checks-for-bypass","text":"This setting determines how many checks a user has to pass before they can be auutomatically verified by Captain. If they don't hit this number of checks, they will be required to verify themselves before gaining entry. You can set this option to null to require all users to verify themselves. This is recommended for large or high-risk servers.","title":"Checks for bypass"},{"location":"config/gatekeeper/#type","text":"This integer represents the kind of verification that users will need to complete to gain access. See the table below for reference. Verification method Key Run a command 0 Complete a captcha 1","title":"Type"},{"location":"config/gatekeeper/#action","text":"This determines what will happen when a user is verified. There's a table below for your convenience. If your server is large or high-risk, it is safer to add a role because it avoids complications during downtime of the bot. Action Key Add a role 0 Remove a role 1","title":"Action"},{"location":"config/gatekeeper/#role","text":"This is the ID of the role that will either be added or removed when a user verifies themselves.","title":"Role"},{"location":"config/gatekeeper/#extras","text":"This should be a dictionary of extra data that is used by a specific type of verification method. At the moment, this only applies to captcha verification (1). See the tables below for help.","title":"Extras"},{"location":"config/gatekeeper/#captcha-verification","text":"Key Explanation char_length The number of characters in a captcha. noise How much image \"noise\" there should be in a captcha. attempts How many attempts a user is given per captcha.","title":"Captcha Verification"},{"location":"config/gatekeeper/#what-checks-are-ran","text":"Currently, there are 2 checks ran on each new user.","title":"What checks are ran?"},{"location":"config/gatekeeper/#avatar-check","text":"Raiders and automated bot accounts tend to have no avatar. As such, Captain checks whether or not a user has an avatar when it joins and uses that in it's summary of a user's threat level.","title":"Avatar check"},{"location":"config/gatekeeper/#age-check","text":"Almost always, malicious accounts are new and created en masse. As such, a user must be x seconds old to pass this check (though almost all legitimate accounts will pass).","title":"Age check"},{"location":"config/infractions/","text":"The infractions config options allow you to specify a handful of settings that change how infractions are carried out by the bot. Example infractions : mute_role : 123456789098765432 # role ID ban_purge_days : 7 # any number between 0 and 7 Mute role \u00b6 In short, the mute_role is the ID of the role that is added/removed from users when they are muted/unmuted respectively. Ban Purge Days \u00b6 The ban_purge_days is the number of days worth of recent messages that will be deleted when a user is banned. This is actually a part of Discord so there isn't much room to expand upon this.","title":"Infractions"},{"location":"config/infractions/#mute-role","text":"In short, the mute_role is the ID of the role that is added/removed from users when they are muted/unmuted respectively.","title":"Mute role"},{"location":"config/infractions/#ban-purge-days","text":"The ban_purge_days is the number of days worth of recent messages that will be deleted when a user is banned. This is actually a part of Discord so there isn't much room to expand upon this.","title":"Ban Purge Days"},{"location":"config/lockdown/","text":"You can control a handful of options for locking down channels with the lockdown option. Example lockdown : locked_role : everyone # or role ID whitelist : - 123456789098765432 # role ID Locked role \u00b6 This option allows you to change which role is given the channel override that stops them from speaking. Most of the time, this should be everyone , but it could also be the ID of a role that most/all members have. Whitelist \u00b6 This is a list of roles that are specifically allowed to talk during a lockdown. Often times, this will be for Moderators and trusted people.","title":"Lockdown"},{"location":"config/lockdown/#locked-role","text":"This option allows you to change which role is given the channel override that stops them from speaking. Most of the time, this should be everyone , but it could also be the ID of a role that most/all members have.","title":"Locked role"},{"location":"config/lockdown/#whitelist","text":"This is a list of roles that are specifically allowed to talk during a lockdown. Often times, this will be for Moderators and trusted people.","title":"Whitelist"},{"location":"config/logs/","text":"The logs option allows you to tell Captain which events should be logged to which channels. Example logs : 123456789098765432 : # text channel ID - MEMBER_BAN - MEMBER_TEMPBAN - MEMBER_BAN_EXPIRE - MEMBER_UNBAN - MEMBER_KICK - MEMBER_MUTE - MEMBER_REMUTE - MEMBER_TEMPMUTE - MEMBER_MUTE_EXPIRE - MEMBER_UNMUTE - MEMBER_WARN - LOCKDOWN - LOCKDOWN_TEMP - LOCKDOWN_EXPIRE - LOCKDOWN_CANCEL 123456789098765432 : # text channel ID - MEMBER_JOIN - MEMBER_LEAVE 123456789098765432 : # text channel ID - MESSAGE_EDIT - MESSAGE_DELETE - MESSAGE_BULK_DELETE Event Key Member banned MEMBER_BAN Member temp-banned MEMBER_TEMP_BAN Member unbanned MEMBER_UNBAN Member ban expired MEMBER_BAN_EXPIRE Member kicked MEMBER_KICK Member muted MEMBER_MUTE Member temp-muted MEMBER_TEMP_MUTE Member re-muted MEMBER_REMUTE Member unmuted MEMBER_UNMUTE Member mute expired MEMBER_MUTE_EXPIRE Member warned MEMBER_WARN Lockdown started LOCKDOWN Temp lockdown started LOCKDOWN_TEMP Lockdown expired LOCKDOWN_EXPIRE Lockdown cancelled LOCKDOWN_CANCEL Member joined MEMBER_JOIN Member left MEMBER_LEAVE Message edited MESSAGE_EDIT Message deleted MESSAGE_DELETE Many messages deleted MESSAGE_BULK_DELETE Channel created CHANNEL_CREATE Channel deleted CHANNEL_DELETE Role created ROLE_CREATE Role deleted ROLE_DELETE Nickname added NICKNAME_ADD Nickname changed NICKNAME_CHANGE Nickname removed NICKNAME_REMOVE","title":"Logging"},{"location":"config/persistent-roles/","text":"Configuring persistent roles allows you to tell Captain to add specific roles back to users when they leave and rejoin the server (assuming they had the role when they left). Often times, you'll want to configure the infractions.mute_role to be re-added to muted users when they rejoin the server. This prevents mute-evasion and is crucial to a secure server. Example persistent_roles : enabled : true whitelist : - 123456789098765432 # role ID Whitelist \u00b6 This is yet another example of a self-explanatory option but I'll document it anyway. This should be a list of roles that can be re-added by persistent roles (this does NOT include your server's mute role by default, you must add it to this list yourself).","title":"Persistent Roles"},{"location":"config/persistent-roles/#whitelist","text":"This is yet another example of a self-explanatory option but I'll document it anyway. This should be a list of roles that can be re-added by persistent roles (this does NOT include your server's mute role by default, you must add it to this list yourself).","title":"Whitelist"},{"location":"config/reaction-roles/","text":"Sometimes, you'll find that you want a way for users to select a handful of vanity (or otherwise utility) roles such as colours and roles that give you access to more specific content like a gamer discussion channel. Insert reaction roles. In a nutshell, users can select a variety of configured roles by reacting (or unreacting) to a specific message with a specific emoji. Example reaction_roles : enabled : true channel : 123456789098765432 # text channel ID message : 123456789098765432 # message ID roles : 123456789098765432 : \u2705 # role ID: unicode emoji or custom emoji (<:name:id>) Channel \u00b6 Because of a Discord API limitation, you need to provide the channel where the message is located. Message \u00b6 This is the message that users will be reacting to. Usually, this is in an otherwise empty channel that regular members cannot type in. The message's content will not be provided for you, so you'll have to tell users which emoji will give them which role. Roles \u00b6 This should be a key-value pair where the key is a role ID and the value is either a unicode emoji or a custom Discord emoji (this will be found in the format <:name:id> ).","title":"Reaction Roles"},{"location":"config/reaction-roles/#channel","text":"Because of a Discord API limitation, you need to provide the channel where the message is located.","title":"Channel"},{"location":"config/reaction-roles/#message","text":"This is the message that users will be reacting to. Usually, this is in an otherwise empty channel that regular members cannot type in. The message's content will not be provided for you, so you'll have to tell users which emoji will give them which role.","title":"Message"},{"location":"config/reaction-roles/#roles","text":"This should be a key-value pair where the key is a role ID and the value is either a unicode emoji or a custom Discord emoji (this will be found in the format <:name:id> ).","title":"Roles"},{"location":"config/roles-for-badges/","text":"roles_for_badges is a system I invented to assign roles to users depending on the Discord badges they have. For example, Discord Partners will receive a role called \"Discord Partner\", or something along those lines. Example roles_for_badges : enabled : true sync_on : - JOIN flags : 1 : 123456789098765432 # role ID 2 : 123456789098765432 # role ID 4 : 123456789098765432 # role ID 8 : 123456789098765432 # role ID 64 : 123456789098765432 # role ID 128 : 123456789098765432 # role ID 256 : 123456789098765432 # role ID 512 : 123456789098765432 # role ID 16384 : 123456789098765432 # role ID 131072 : 123456789098765432 # role ID Sync on \u00b6 This option specifies a list of events where Captain can automatically synchronise a user's roles. See the table below for reference. Event Key User joined JOIN Note Due to a limitation with the Discord API, there's no sane way to update a user's roles when they receive a new badge (or lose one). Flags \u00b6 This is a key-value mapping where the key is the flag integer used by the Discord API to denote a specific badge. E.g. 1 = Discord Staff, see the table below for info. The value should be the role that corresponds with the flag. Badge Flag Discord Staff 1 Discord Partner 2 HS Events 4 Bug Hunter 8 HS Bravery 64 HS Brilliance 128 HS Balance 256 Early Supporter 512 Bug Hunter Lvl 2 16384 Verified Bot Dev 131072","title":"Roles for Badges"},{"location":"config/roles-for-badges/#sync-on","text":"This option specifies a list of events where Captain can automatically synchronise a user's roles. See the table below for reference. Event Key User joined JOIN Note Due to a limitation with the Discord API, there's no sane way to update a user's roles when they receive a new badge (or lose one).","title":"Sync on"},{"location":"config/roles-for-badges/#flags","text":"This is a key-value mapping where the key is the flag integer used by the Discord API to denote a specific badge. E.g. 1 = Discord Staff, see the table below for info. The value should be the role that corresponds with the flag. Badge Flag Discord Staff 1 Discord Partner 2 HS Events 4 Bug Hunter 8 HS Bravery 64 HS Brilliance 128 HS Balance 256 Early Supporter 512 Bug Hunter Lvl 2 16384 Verified Bot Dev 131072","title":"Flags"},{"location":"config/starboards/","text":"Starboars are a way to allow users to upvote messages by reacting to it, often using a star emoji. Once a message has received enough upvotes (upvotes from bot accounts and the message author are ignored), it will be posted to a special channel. This essentially allows the community to save funny, memey or otherwise important messages so that they can easily be found again. Example starboard : enabled : true emoji : \u2b50 # unicode emoji or custom emoji (<:name:id>) required_stars : 1 channel : 123456789098765432 # text channel ID ignored_roles : - 123456789098765432 # role ID ignored_channels : - 123456789098765432 # text channel ID Emoji \u00b6 This is the emoji that users will need to react with in order to upvote a message. It could be a unicode emoji, or a custom Discord emoji in the format <:name:id> . Required stars \u00b6 This is pretty obvious. The number represents how many stars are required for a message to be posted to the starboard channel. Channel \u00b6 This is the ID of the starboard channel where starred messages are sent. Ignored roles & Ignored channels \u00b6 These two are pretty simple. Ignored roles is a list of roles that cannot star messages (if a user has any of these roles, their upvote will be ignored). Similarly, ignored channels is a list of channels where messages cannot be uploaded to the starboard channel.","title":"Starboards"},{"location":"config/starboards/#emoji","text":"This is the emoji that users will need to react with in order to upvote a message. It could be a unicode emoji, or a custom Discord emoji in the format <:name:id> .","title":"Emoji"},{"location":"config/starboards/#required-stars","text":"This is pretty obvious. The number represents how many stars are required for a message to be posted to the starboard channel.","title":"Required stars"},{"location":"config/starboards/#channel","text":"This is the ID of the starboard channel where starred messages are sent.","title":"Channel"},{"location":"config/starboards/#ignored-roles-ignored-channels","text":"These two are pretty simple. Ignored roles is a list of roles that cannot star messages (if a user has any of these roles, their upvote will be ignored). Similarly, ignored channels is a list of channels where messages cannot be uploaded to the starboard channel.","title":"Ignored roles &amp; Ignored channels"},{"location":"config/stat-counters/","text":"Statistics counters are special see-only voice channels that are used to provide an overview of a server's statistics. For example, you could have a voice channel that shows how many members are currently in the server. Or, you could have one that shows the name of the newest member. Example stat_counters : 123456789098765432 : # voice channel ID event : MEMBER_COUNT_CHANGE # BOT_COUNT_CHANGE, HUMAN_COUNT_CHANGE, NEWEST_BOT, NEWEST_HUMAN or NEWEST_MEMBER format : \"{value}\" Event \u00b6 This option specifies what statistic the provided channel will show. Refer to the table below for information on which events are currently available. Event Key Someone joined/left the server MEMBER_COUNT_CHANGE A bot account joined/left the server BOT_COUNT_CHANGE A regular user joined/left the server HUMAN_COUNT_CHANGE The newest user/bot NEWEST_MEMBER The newest bot account NEWEST_BOT The newest regular user NEWEST_HUMAN Format \u00b6 This is a format string used to determine the new name of the voice channel once the event triggers. You only have one formatting option available to you and that is value (so you would type {value} to indicate where that value belongs). For example, if I wanted to show the total number of server members, the format would be something like Members: {value} .","title":"Stat Counters"},{"location":"config/stat-counters/#event","text":"This option specifies what statistic the provided channel will show. Refer to the table below for information on which events are currently available. Event Key Someone joined/left the server MEMBER_COUNT_CHANGE A bot account joined/left the server BOT_COUNT_CHANGE A regular user joined/left the server HUMAN_COUNT_CHANGE The newest user/bot NEWEST_MEMBER The newest bot account NEWEST_BOT The newest regular user NEWEST_HUMAN","title":"Event"},{"location":"config/stat-counters/#format","text":"This is a format string used to determine the new name of the voice channel once the event triggers. You only have one formatting option available to you and that is value (so you would type {value} to indicate where that value belongs). For example, if I wanted to show the total number of server members, the format would be something like Members: {value} .","title":"Format"},{"location":"intro/get-captain/","text":"There are two ways to get your hands on Captain: You run your own instance; Someone lets you use their instance There are pros and cons to each method and I'll run through most of them here. Running your own instance \u00b6 Pros: You have complete control over it, so you can start/stop and change any files whenever you like; You can upload it to your own machine meaning that you don't have to rely on the uptime of someone else's machine Cons: You have to have your own machine that you can host the bot on; You have to set Captain up yourself, which means you need to understand how to read technical documentation and use Linux servers. Using someone else's instance \u00b6 Pros: You don't have to set it up yourself; There's pretty much no investment needed Cons: You have to rely on someone's upkeep of the bot; You can't change your guild's configuration when you want (this may change in the future); You have to actually find someone who will let you use their instance Summary \u00b6 All in all, if you have the technical skill required, it is better to run your own. However, if you don't have the skill and really need the bot, you can contact me in the official Discord server and I will arrange for you to use the official instance.","title":"Get Captain"},{"location":"intro/get-captain/#running-your-own-instance","text":"Pros: You have complete control over it, so you can start/stop and change any files whenever you like; You can upload it to your own machine meaning that you don't have to rely on the uptime of someone else's machine Cons: You have to have your own machine that you can host the bot on; You have to set Captain up yourself, which means you need to understand how to read technical documentation and use Linux servers.","title":"Running your own instance"},{"location":"intro/get-captain/#using-someone-elses-instance","text":"Pros: You don't have to set it up yourself; There's pretty much no investment needed Cons: You have to rely on someone's upkeep of the bot; You can't change your guild's configuration when you want (this may change in the future); You have to actually find someone who will let you use their instance","title":"Using someone else's instance"},{"location":"intro/get-captain/#summary","text":"All in all, if you have the technical skill required, it is better to run your own. However, if you don't have the skill and really need the bot, you can contact me in the official Discord server and I will arrange for you to use the official instance.","title":"Summary"},{"location":"setup/installation/","text":"Cloning the Repository \u00b6 First thing's first, clone the repository! git clone https://github.com/Jack-Gledhill/captain Configuration files \u00b6 Make sure to cd into the captain/bot directory. Now you need to edit 2 files. These two files are config.example.yml and guilds.example.yml , you need to rename them to have the .yml without the .example then edit them. Lastly, you'll need to rename core/constants.example.py to core/constants.py then edit it. This file contains information for the core, like the bot's token and presence information. Deploying a Captain container \u00b6 Deploying a container needs to be done in two steps. First you need to build the image, then you need to run an instance of that image. It's easy though so don't worry! To build an image, cd into captain/bot then run docker build . docker build . --tag captain:3.2.0 Now all that's left to do is run an instance of the container with docker run . docker run -d -v ~/captain/bot/guilds.yml:/opt/bot/guilds.yml -v ~/captain/bot/config.yml:/opt/bot/config.yml -v ~/captain/bot/core/constants.py:/opt/bot/core/constants.py --name captain --network=\"host\" captain:3.2.0 Note If your clone's directory is located somewhere other than ~/captain , you will need to change the bind-mounts for the config files. Additional support \u00b6 Congratulations, you have officially set up your own Captain bot! If, somehow, you haven't, then join the official Discord server and we'll be happy to lend a hand!","title":"Installation"},{"location":"setup/installation/#cloning-the-repository","text":"First thing's first, clone the repository! git clone https://github.com/Jack-Gledhill/captain","title":"Cloning the Repository"},{"location":"setup/installation/#configuration-files","text":"Make sure to cd into the captain/bot directory. Now you need to edit 2 files. These two files are config.example.yml and guilds.example.yml , you need to rename them to have the .yml without the .example then edit them. Lastly, you'll need to rename core/constants.example.py to core/constants.py then edit it. This file contains information for the core, like the bot's token and presence information.","title":"Configuration files"},{"location":"setup/installation/#deploying-a-captain-container","text":"Deploying a container needs to be done in two steps. First you need to build the image, then you need to run an instance of that image. It's easy though so don't worry! To build an image, cd into captain/bot then run docker build . docker build . --tag captain:3.2.0 Now all that's left to do is run an instance of the container with docker run . docker run -d -v ~/captain/bot/guilds.yml:/opt/bot/guilds.yml -v ~/captain/bot/config.yml:/opt/bot/config.yml -v ~/captain/bot/core/constants.py:/opt/bot/core/constants.py --name captain --network=\"host\" captain:3.2.0 Note If your clone's directory is located somewhere other than ~/captain , you will need to change the bind-mounts for the config files.","title":"Deploying a Captain container"},{"location":"setup/installation/#additional-support","text":"Congratulations, you have officially set up your own Captain bot! If, somehow, you haven't, then join the official Discord server and we'll be happy to lend a hand!","title":"Additional support"},{"location":"setup/prerequisites/","text":"A host \u00b6 The first, and most important, thing you'll need is a host. This can be a dedicated server (this could be an enterprise-grade server or just an old computer) or a virtual server (AKA VPS). Either way, the important thing you'll need is 24/7 uptime (or close to it). There are many providers out there that you can rent VPSs or dedicated servers from. Personally, I rent a 4 core, 8 GB RAM VPS from Contabo at \u00a34.50/m (about $5.90/m or 5 euros/m). Important note: the host you use MUST be running a Linux distribution! This guide assumes you're using a Ubuntu host, but any Linux host will have similar setup instructions. Git \u00b6 Git is an important CLI tool that's usually already installed on most Linux distributions. If it isn't, run the command below. sudo apt-get install git PostgreSQL \u00b6 You'll also need a PostgreSQL server. In layman's terms, this is a database. I recommend using this guide if you're using an Ubuntu server. If you're not using Ubuntu, I'm sure a quick Google search for your specific distro should do it. Docker \u00b6 Docker is a piece of software we use to place other software into what we call a \"container\". In simple terms, a container is an isolated environment that gives users superior control over the software they're running. I use this guide to get Docker up and running properly. Redis \u00b6 The final prerequisite is Redis. Redis is an in-memory database (in other words a cache) that Captain uses to temporarily store information for spam detection. You'll find that this guide will prove useful. As long as you run your Redis server on the same host as Captain, there isn't much need to setup a password since the information only lasts for a few seconds and doesn't reveal anything secret. Besides, only software on your host could access Redis in the first place.","title":"Prerequisites"},{"location":"setup/prerequisites/#a-host","text":"The first, and most important, thing you'll need is a host. This can be a dedicated server (this could be an enterprise-grade server or just an old computer) or a virtual server (AKA VPS). Either way, the important thing you'll need is 24/7 uptime (or close to it). There are many providers out there that you can rent VPSs or dedicated servers from. Personally, I rent a 4 core, 8 GB RAM VPS from Contabo at \u00a34.50/m (about $5.90/m or 5 euros/m). Important note: the host you use MUST be running a Linux distribution! This guide assumes you're using a Ubuntu host, but any Linux host will have similar setup instructions.","title":"A host"},{"location":"setup/prerequisites/#git","text":"Git is an important CLI tool that's usually already installed on most Linux distributions. If it isn't, run the command below. sudo apt-get install git","title":"Git"},{"location":"setup/prerequisites/#postgresql","text":"You'll also need a PostgreSQL server. In layman's terms, this is a database. I recommend using this guide if you're using an Ubuntu server. If you're not using Ubuntu, I'm sure a quick Google search for your specific distro should do it.","title":"PostgreSQL"},{"location":"setup/prerequisites/#docker","text":"Docker is a piece of software we use to place other software into what we call a \"container\". In simple terms, a container is an isolated environment that gives users superior control over the software they're running. I use this guide to get Docker up and running properly.","title":"Docker"},{"location":"setup/prerequisites/#redis","text":"The final prerequisite is Redis. Redis is an in-memory database (in other words a cache) that Captain uses to temporarily store information for spam detection. You'll find that this guide will prove useful. As long as you run your Redis server on the same host as Captain, there isn't much need to setup a password since the information only lasts for a few seconds and doesn't reveal anything secret. Besides, only software on your host could access Redis in the first place.","title":"Redis"},{"location":"setup/updating/","text":"Whenever a new Captain update arrives, you'll probably want to get it. This guide runs through the simple process of updating your Captain instance! Pull the repository \u00b6 The first step is to download the new repository code. git pull Warning You may find that new sections have been added to the configuration files. If so, you'll need to update your existing configuration files appropriately! Recreating the image \u00b6 Next, you'll need to recreate the Docker image for Captain. This is a pretty simple task, much like the one in the installation guide. First of all, make sure to cd into the captain/bot directory. Now run docker build like so: docker build . --tag captain:3.2.0 Redeploying the container \u00b6 Redeploying Captain is a little more long-winded but should be an easy task. The first task is to stop the running container. docker stop captain After that, you'll need to remove the container. docker rm captain Now, you're ready to recreate the container just like you did before! docker run -d -v ~/captain/bot/guilds.yml:/opt/bot/guilds.yml -v ~/captain/bot/config.yml:/opt/bot/config.yml -v ~/captain/bot/core/constants.py:/opt/bot/core/constants.py --name captain --network=\"host\" captain:3.2.0 Note If your clone's directory is located somewhere other than ~/captain , you will need to change the bind-mounts for the config files.","title":"Updating"},{"location":"setup/updating/#pull-the-repository","text":"The first step is to download the new repository code. git pull Warning You may find that new sections have been added to the configuration files. If so, you'll need to update your existing configuration files appropriately!","title":"Pull the repository"},{"location":"setup/updating/#recreating-the-image","text":"Next, you'll need to recreate the Docker image for Captain. This is a pretty simple task, much like the one in the installation guide. First of all, make sure to cd into the captain/bot directory. Now run docker build like so: docker build . --tag captain:3.2.0","title":"Recreating the image"},{"location":"setup/updating/#redeploying-the-container","text":"Redeploying Captain is a little more long-winded but should be an easy task. The first task is to stop the running container. docker stop captain After that, you'll need to remove the container. docker rm captain Now, you're ready to recreate the container just like you did before! docker run -d -v ~/captain/bot/guilds.yml:/opt/bot/guilds.yml -v ~/captain/bot/config.yml:/opt/bot/config.yml -v ~/captain/bot/core/constants.py:/opt/bot/core/constants.py --name captain --network=\"host\" captain:3.2.0 Note If your clone's directory is located somewhere other than ~/captain , you will need to change the bind-mounts for the config files.","title":"Redeploying the container"}]}